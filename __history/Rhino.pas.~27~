unit Rhino;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FMX.ListView.Types, FMX.ListView.Appearances, FMX.ListView.Adapters.Base,
  FMX.StdCtrls, FMX.Controls.Presentation, FMX.ListView, FMX.TabControl,
  declarations, FMX.Layouts, Member;

type
  TForm1 = class(TForm)
    pTop: TPanel;
    expanderBtn: TExpander;
    lvRhino: TListView;
    splitter: TSplitter;
    tcRhino: TTabControl;
    btnMitglied: TButton;
    expanderpanel: TPanel;
    btnTrainer: TButton;
    btnPlayer: TButton;
    btnContact: TButton;
    btnSponsor: TButton;
    btnAddress: TButton;
    btnAdd: TButton;
    procedure btnMitgliedClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure btnTrainerClick(Sender: TObject);
    procedure btnPlayerClick(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure btnAddClick(Sender: TObject);
  private
    { Private-Deklarationen }
    FTestPanel    : TMemberPanel;
    Mitglied      : TTabItem;
    btnMember     : TButton;

    // Listen
    Members : TObjectList<TMember>;
  public
    { Public-Deklarationen }
  end;

var
  Form1: TForm1;

implementation


{$R *.fmx}

procedure TForm1.btnAddClick(Sender: TObject);
var
   i              : integer;
   index          : integer;
   tmpNewMember   : TMember;
   LItem          : TListViewItem;
begin
    // Mitglied erzeugen;
      tmpNewMember         := TMember.Create;
      tmpNewMember.Name    := 'Neues';
      tmpNewMember.Surname := 'Mitglied';
    //  Members.add(tmpNewMember);                => Liste muss noch erzeugt werden
    // TabControl Mitgliedelement einfügen
    tcRhino.BeginUpdate;
      Mitglied             :=  TTabItemClass.Create(self);
      Mitglied.Parent      :=  tcRhino;
      Mitglied.Name        := 'Mitglied' + intToStr(tcRhino.TabCount);
      Mitglied.Text        := 'Mitglied' + intToStr(tcRhino.TabCount);
      GMemberPanelNumber   := tcRhino.TabCount;
      FTestPanel           := TMemberPanel.create(self);
      FTestPanel.Parent    := Mitglied;
      FTestPanel.Name      := 'Panel' + intToStr(tcRhino.TabCount);
      FTestPanel.Align     := FTestPanel.Align.alClient;
      FTestPanel.Panel     := GMemberPanelNumber;
      FTestPanel.createObjects(GMemberPanelNumber);
    tcRhino.EndUpdate;
    // ListView Mitgliedelement einfügen
    lvRhino.BeginUpdate;
      for i := 0 to index do
        begin
//          tmpNewMember      := (Members.Items[i]) as TMember;
          LItem             := lvRhino.Items.Add;
          LItem.Text        := tmpNewMember.Name + ', '
                                + tmpNewMember.Surname;
//          LItem.Detail      := inttostr(Members.IndexOf(tmpNewMember));
        end;
    lvRhino.EndUpdate;
end;

procedure TForm1.btnMitgliedClick(Sender: TObject);

begin
      // Code noch einfügen
      showmessage('Code noch einfügen');
end;

procedure TForm1.btnPlayerClick(Sender: TObject);
var
    Player : TTabItem;
begin
    tcRhino.BeginUpdate;
    Player:=  TTabItemClass.Create(tcRhino);
    Player.Parent     :=  tcRhino;
    Player.Text       := 'Spieler ' + intToStr(tcRhino.TabCount);
    tcRhino.EndUpdate;
end;

procedure TForm1.btnTrainerClick(Sender: TObject);
var
    Trainer : TTabItem;
begin
    tcRhino.BeginUpdate;
    Trainer:=  TTabItemClass.Create(tcRhino);
    Trainer.Parent     :=  tcRhino;
    Trainer.Text       := 'Trainer ' + intToStr(tcRhino.TabCount);
    tcRhino.EndUpdate;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
      expanderBtn.IsExpanded := false;
end;

procedure TForm1.FormDestroy(Sender: TObject);
begin
  FreeAndNil(FTestPanel);
end;

end.
